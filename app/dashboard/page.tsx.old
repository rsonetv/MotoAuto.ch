"use client"

import { useState, useEffect } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Button } from '@/components/ui/button'
import { Progress } from '@/components/ui/progress'
import { 
  Car, 
  Gavel, 
  Eye, 
  TrendingUp, 
  Package, 
  CreditCard,
  Plus,
  Award,
  Calendar
} from 'lucide-react'
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs'
import { useRouter } from 'next/navigation'
import Link from 'next/link'
import { AnalyticsDashboard } from '@/components/dashboard/analytics-dashboard'
import { RecentActivity } from '@/components/dashboard/recent-activity'

interface DashboardStats {
  activeListings: number
  totalViews: number
  activeBids: number
  successfulSales: number
  freeListingsUsed: number
  freeListingsRemaining: number
  currentPackage: string
  totalEarnings: number
  monthlyViews: number
  conversionRate: number
}

export default function DashboardPage() {
  const [stats, setStats] = useState<DashboardStats | null>(null)
  const [loading, setLoading] = useState(true)
  const router = useRouter()
  const supabase = createClientComponentClient()

  useEffect(() => {
    fetchDashboardStats()
  }, [])

  const fetchDashboardStats = async () => {
    try {
      const { data: { user } } = await supabase.auth.getUser()
      if (!user) return

      // Pobierz profil u¿ytkownika
      const { data: profile } = await supabase
        .from("profiles")
        .select("*")
        .eq("id", user.id)
        .single()

      // Pobierz statystyki og³oszeñ
      const { data: listings } = await supabase
        .from("listings")
        .select("*, views, status, created_at, price")
        .eq("user_id", user.id)

      // Pobierz licytacje
      const { data: bids } = await supabase
        .from("bids")
        .select("*, listings(*)")
        .eq("user_id", user.id)
        .eq("status", "active")

      // Oblicz statystyki
      const activeListings = listings?.filter(l => l.status === "active").length || 0
      const totalViews = listings?.reduce((sum, l) => sum + (l.views || 0), 0) || 0
      const activeBids = bids?.length || 0
      const successfulSales = listings?.filter(l => l.status === "sold").length || 0
      const freeListingsUsed = profile?.free_listings_used || 0
      const freeListingsRemaining = Math.max(0, 1 - freeListingsUsed) // Pierwsze za darmo
      const totalEarnings = listings?.filter(l => l.status === "sold")
        .reduce((sum, l) => sum + l.price, 0) || 0

      setStats({
        activeListings,
        totalViews,
        activeBids,
        successfulSales,
        freeListingsUsed,
        freeListingsRemaining,
        currentPackage: profile?.is_dealer ? "Dealer" : "Standard",
        totalEarnings,
        monthlyViews: Math.floor(totalViews * 0.3), // Aproksymacja
        conversionRate: totalViews > 0 ? (successfulSales / totalViews) * 100 : 0
      })
    } catch (error) {
      console.error("Error fetching dashboard stats:", error)
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <div className="space-y-6">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {[...Array(4)].map((_, i) => (
            <Card key={i} className="animate-pulse">
              <CardContent className="p-6">
                <div className="h-8 bg-gray-200 rounded mb-2"></div>
                <div className="h-4 bg-gray-200 rounded"></div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Dashboard</h1>
          <p className="text-gray-600">Zarz¹dzaj swoimi og³oszeniami i aukcjami</p>
        </div>
        <Link href="/ogloszenia/dodaj">
          <Button>
            <Plus className="w-4 h-4 mr-2" />
            Dodaj og³oszenie
          </Button>
        </Link>
      </div>

      {/* Darmowe og³oszenie info */}
      {stats && stats.freeListingsRemaining > 0 && (
        <Card className="border-green-200 bg-green-50">
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <Award className="w-8 h-8 text-green-600" />
                <div>
                  <h3 className="font-semibold text-green-800">
                    Masz prawo do darmowego og³oszenia!
                  </h3>
                  <p className="text-green-600">
                    Twoje pierwsze og³oszenie jest ca³kowicie za darmo - bez ukrytych kosztów.
                  </p>
                </div>
              </div>
              <Link href="/ogloszenia/dodaj">
                <Button variant="outline" className="border-green-300 text-green-700 hover:bg-green-100">
                  Dodaj za darmo
                </Button>
              </Link>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Statystyki g³ówne */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Aktywne og³oszenia</p>
                <p className="text-2xl font-bold text-gray-900">{stats?.activeListings}</p>
              </div>
              <Car className="w-8 h-8 text-blue-600" />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">£¹czne wyœwietlenia</p>
                <p className="text-2xl font-bold text-gray-900">{stats?.totalViews.toLocaleString()}</p>
              </div>
              <Eye className="w-8 h-8 text-green-600" />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Aktywne licytacje</p>
                <p className="text-2xl font-bold text-gray-900">{stats?.activeBids}</p>
              </div>
              <Gavel className="w-8 h-8 text-orange-600" />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Sprzedane pojazdy</p>
                <p className="text-2xl font-bold text-gray-900">{stats?.successfulSales}</p>
              </div>
              <TrendingUp className="w-8 h-8 text-purple-600" />
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Status pakietu i darmowych og³oszeñ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <Package className="w-5 h-5" />
              <span>Status pakietu</span>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-600">Obecny pakiet:</span>
                <Badge variant={stats?.currentPackage === "Dealer" ? "default" : "secondary"}>
                  {stats?.currentPackage}
                </Badge>
              </div>
              <div>
                <div className="flex items-center justify-between mb-2">
                  <span className="text-sm text-gray-600">Darmowe og³oszenia:</span>
                  <span className="text-sm font-medium">
                    {stats?.freeListingsRemaining}/{1}
                  </span>
                </div>
                <Progress 
                  value={(1 - (stats?.freeListingsRemaining || 0)) * 100} 
                  className="h-2"
                />
              </div>
              <Link href="/dashboard/packages">
                <Button variant="outline" className="w-full">
                  Zmieñ pakiet
                </Button>
              </Link>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <CreditCard className="w-5 h-5" />
              <span>Finanse</span>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-600">£¹czne zarobki:</span>
                <span className="text-lg font-bold text-green-600">
                  {stats?.totalEarnings.toLocaleString()} CHF
                </span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-600">Wspó³czynnik konwersji:</span>
                <span className="text-sm font-medium">
                  {stats?.conversionRate.toFixed(1)}%
                </span>
              </div>
              <Link href="/dashboard/payments">
                <Button variant="outline" className="w-full">
                  Historia p³atnoœci
                </Button>
              </Link>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Analityka i ostatnia aktywnoœæ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <AnalyticsDashboard />
        <RecentActivity />
      </div>
    </div>
  )
}
