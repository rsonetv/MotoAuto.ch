"use client"

import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Globe, Menu, User, Bell, Search } from "lucide-react"
import { 
  DropdownMenu, 
  DropdownMenuContent, 
  DropdownMenuItem, 
  DropdownMenuTrigger 
} from "@/components/ui/dropdown-menu"
import { useState, useEffect } from "react"

export function Header() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // Handle scroll effect
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  return (
    <header className={`sticky top-0 z-50 w-full transition-all duration-300 ${
      isScrolled 
        ? "bg-white/95 text-foreground shadow-sm dark:bg-background/95 backdrop-blur-sm" 
        : "bg-transparent text-white"
    }`}>
      <div className="container mx-auto px-4 py-3">
        <div className="flex items-center justify-between">
          <Link href="/" className="flex items-center">
            <span className="text-2xl font-bold">
              MotoAuto<span className="text-accent-light">.ch</span>
            </span>
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex items-center space-x-6">
            <Link 
              href="/ogloszenia" 
              className={`hover:text-primary transition-colors ${
                isScrolled ? "text-foreground" : "text-white"
              }`}
            >
              Ogłoszenia
            </Link>
            <Link 
              href="/aukcje" 
              className={`hover:text-primary transition-colors ${
                isScrolled ? "text-foreground" : "text-white"
              }`}
            >
              Aukcje
            </Link>
            <Link 
              href="/jak-to-dziala" 
              className={`hover:text-primary transition-colors ${
                isScrolled ? "text-foreground" : "text-white"
              }`}
            >
              Jak to działa
            </Link>
            <Link 
              href="/kontakt" 
              className={`hover:text-primary transition-colors ${
                isScrolled ? "text-foreground" : "text-white"
              }`}
            >
              Kontakt
            </Link>
          </nav>

          {/* Desktop Right Side */}
          <div className="hidden md:flex items-center space-x-4">
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="icon" 
                  className={`rounded-full ${isScrolled ? "" : "text-white hover:bg-white/10"}`}
                >
                  <Search className="w-5 h-5" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end" className="w-[300px] p-4">
                <div className="space-y-2">
                  <h4 className="font-medium">Szybkie wyszukiwanie</h4>
                  <div className="relative">
                    <Search className="absolute left-2 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
                    <input
                      type="search"
                      placeholder="Wyszukaj..."
                      className="w-full pl-8 pr-4 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
                    />
                  </div>
                </div>
              </DropdownMenuContent>
            </DropdownMenu>
            
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="icon" 
                  className={`rounded-full ${isScrolled ? "" : "text-white hover:bg-white/10"}`}
                >
                  <Bell className="w-5 h-5" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <div className="p-2 text-center text-sm text-muted-foreground">
                  Nie masz nowych powiadomień
                </div>
              </DropdownMenuContent>
            </DropdownMenu>
            
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="icon" 
                  className={`rounded-full ${isScrolled ? "" : "text-white hover:bg-white/10"}`}
                >
                  <User className="w-5 h-5" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem asChild>
                  <Link href="/auth/login">Zaloguj się</Link>
                </DropdownMenuItem>
                <DropdownMenuItem asChild>
                  <Link href="/auth/register">Zarejestruj się</Link>
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
            
            <Button 
              asChild 
              className={`bg-accent-light hover:bg-accent-dark ${isScrolled ? "" : "shadow-sm"}`}
            >
              <Link href="/ogloszenia/dodaj">Dodaj ogłoszenie</Link>
            </Button>
            
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="icon" 
                  className={`rounded-full ${isScrolled ? "" : "text-white hover:bg-white/10"}`}
                >
                  <Globe className="w-5 h-5" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem>Polski</DropdownMenuItem>
                <DropdownMenuItem>English</DropdownMenuItem>
                <DropdownMenuItem>Deutsch</DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>

          {/* Mobile Menu Button */}
          <div className="flex md:hidden items-center space-x-2">
            <Button 
              asChild 
              variant="ghost" 
              size="sm" 
              className={`${isScrolled ? "" : "text-white hover:bg-white/10"}`}
            >
              <Link href="/auth/login">Zaloguj</Link>
            </Button>
            <Button
              variant="ghost"
              size="icon"
              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
              className={`${isScrolled ? "" : "text-white hover:bg-white/10"}`}
            >
              <Menu className="w-6 h-6" />
            </Button>
          </div>
        </div>
      </div>

      {/* Mobile Menu */}
      {isMobileMenuOpen && (
        <div className="md:hidden bg-white dark:bg-background border-t border-border py-4 px-4">
          <nav className="flex flex-col space-y-4">
            <Link href="/ogloszenia" className="hover:text-primary" onClick={() => setIsMobileMenuOpen(false)}>
              Ogłoszenia
            </Link>
            <Link href="/aukcje" className="hover:text-primary" onClick={() => setIsMobileMenuOpen(false)}>
              Aukcje
            </Link>
            <Link href="/jak-to-dziala" className="hover:text-primary" onClick={() => setIsMobileMenuOpen(false)}>
              Jak to działa
            </Link>
            <Link href="/kontakt" className="hover:text-primary" onClick={() => setIsMobileMenuOpen(false)}>
              Kontakt
            </Link>
            <div className="pt-2 border-t border-border">
              <Button asChild className="w-full bg-accent-light hover:bg-accent-dark">
                <Link href="/ogloszenia/dodaj" onClick={() => setIsMobileMenuOpen(false)}>
                  Dodaj ogłoszenie
                </Link>
              </Button>
            </div>
          </nav>
        </div>
      )}
    </header>
  );
}

